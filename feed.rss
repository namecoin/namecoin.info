<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Namecoin</title>
    <description><!--Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
--></description>
    <link>https://www.namecoin.org//</link>
    <atom:link href="https://www.namecoin.org//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 22 Aug 2020 05:25:04 +0000</pubDate>
    <lastBuildDate>Sat, 22 Aug 2020 05:25:04 +0000</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>Namecoin Core name_show name expiration</title>
        <description>&lt;p&gt;Namecoin Core will, starting version 0.21, change the default behavior of the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; RPC API call in the presence of certain errors to better match the documentation, the behavior of Electrum-NMC, and the behavior expected by users.&lt;/p&gt;

&lt;p&gt;When Namecoin Core was first written, it exposed name resolution using an inconsistent API.
When querying for a name that was not active, the behavior varied by the history of the name.
If it had never been registered, Namecoin would return an error.
If it had once been registered in the past, but was now expired, Namecoin would return a response that was deceptively similar to that returned when querying for names that were still active.&lt;/p&gt;

&lt;p&gt;Owing to this inconsistency, some applications using Namecoin Core came to treat expired names as if they were still active.
This was a security problem.
Users continued to use services identified by the names as usual, and as such their operators did not re-register them, but Namecoin does not afford unregistered names any protection.
Therefore, anyone could have registered the names, thereby hijacking the services.
While this may be considered immaterial, it is our opinion that Namecoin should not indirectly encourage such dangerous use-cases.&lt;/p&gt;

&lt;p&gt;Furthermore, those applications’ use of the API for this purpose was incorrect.
Expired names should not be considered alive, and it can hardly be thought that considering them as such would have been the intent in implementing it.
A programmer who relied solely on the documentation (“Looks up the current data for the given name. Fails if the name doesn’t exist.”) would not be left with the impression that the operation would, in fact, only fail for never-registered names.&lt;/p&gt;

&lt;p&gt;For these reasons, a change to the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; API in Namecoin Core has been made.
&lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; will now by default throw an error when attempting to resolve an expired name.
This brings the default behavior in line with Electrum-NMC, which has always thrown an error.
The old behavior can be preserved by setting the allowExpired option or -allow_expired command-line parameter to true.
There are presently no plans to deprecate these flags.&lt;/p&gt;

&lt;p&gt;This change will be included in version 0.21 of Namecoin Core.
Downstream users who use &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; to resolve names for user-facing purposes should not need to make any changes to their usage.
Downstream users who use &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; to resolve names, but who would also like to distinguish between names that have expired and names that have never been registered, are encouraged to explore the allowExpired field in the JSON RPC options argument and the -allowexpired command line parameter.
In such cases, the old behavior still applies, whereby downstream users are expected to consider the value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;expired&lt;/code&gt; field to ascertain whether a domain has expired.&lt;/p&gt;

&lt;p&gt;This change does not affect the resolution of active names in any way.
This change does not affect the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_history&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;name_scan&lt;/code&gt; RPC calls.
This change does not affect Electrum-NMC.&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/08/22/namecoin-core-name-show-expiration.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/08/22/namecoin-core-name-show-expiration.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>We oppose the takeover of Open Technology Fund -- closed-source projects are scams and must not receive &quot;Internet Freedom&quot; funding</title>
        <description>&lt;p&gt;We are watching with alarm the currently-ongoing takeover of the Open Technology Fund (OTF) by the Trump Administration’s newly appointed CEO of the US Agency for Global Media (USAGM, formerly known as BBG), Michael Pack.  In the first week of the new USAGM leadership, Michael has fired OTF CEO Libby Liu and OTF President Laura Cunningham, and (according to a document released by Libby) is apparently preparing to redirect OTF funding away from the current diverse set of open-source tools in favor of a small set of tools, narrowly focused on censorship circumvention, including the closed-source scam projects “Freegate” and “Ultrasurf”.&lt;/p&gt;

&lt;p&gt;Developers of Internet Freedom software, including but not limited to Namecoin, are on the known target lists of intelligence agencies of repressive governments.  The open-source nature of our tools is a prerequisite for users to verify that we have not backdoored the software (e.g. to get dissidents killed).  Furthermore, our own safety as developers is dependent on those intelligence agencies being aware that trying to coerce us to add a backdoor would be futile due to our software’s open-source nature.&lt;/p&gt;

&lt;p&gt;For this reason, Namecoin doesn’t just settle for releasing our code under an OSI/FSF-approved license; we lead by example and push forward the front lines of openness.  For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We strive for reproducible builds in all software we release.&lt;/li&gt;
  &lt;li&gt;We use computers with open-source firmware such as the Asus C201 and the Raptor Talos II for as much of our workflow as possible.&lt;/li&gt;
  &lt;li&gt;We contribute patches to upstream software infrastructure for reproducible builds (e.g. the Gitian and rbm tools used by Tor include patches we authored).&lt;/li&gt;
  &lt;li&gt;We contribute code to software projects improving support for platforms with open-source firmware (e.g. we contribute patches to PrawnOS, we reverse-engineered the Talos II NIC firmware, and we are in the process of porting Tor Browser to ARM and POWER).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us be very clear: software projects that claim to enable “Internet Freedom” but which do not share this commitment to open-source principles are scams.  They actively endanger dissidents who are unwise enough to use them.  Under no circumstances should they receive OTF funding, or any other type of taxpayer-derived funding.&lt;/p&gt;

&lt;p&gt;In addition, the needs of dissidents are substantially more diverse than solely censorship circumvention.  Software to defend against surveillance is also critical, as are security audits, bug bounty programs, and countless other areas that OTF currently funds.  If anything, OTF’s remit would benefit from expansion; narrowing their focus to solely censorship circumvention will leave critical projects in the lurch, endangering the safety of dissidents worldwide.  We are particularly concerned about the harm caused by a narrow focus on censorship circumvention functionality due to the following considerations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Users have empirically been demonstrated to not understand the difference between anonymity and anti-censorship functionality, and giving them software that’s not safe for anonymity will result in many users using it in ways that are dangerous.&lt;/li&gt;
  &lt;li&gt;Even in a fantasy world where 100% of the users who actually need anonymity stick with tools that are safe for that use case, an exodus of the rest of the users will leave the anonymity-requiring users with a dangerously small anonymity set.  It is well-known that the reason NRL opened onion routing to the public is that an anonymity network only used by the US Navy doesn’t actually help anonymize the US Navy.  For the same reason, an anonymity network used by Chinese dissidents who require anonymity to stay safe must have a large amount of cover traffic, and users who are circumventing censorship are a major source of that cover traffic.&lt;/li&gt;
  &lt;li&gt;Censorship circumvention software that relies on security by obscurity is more likely to be censored, potentially with catastrophic timing.&lt;/li&gt;
  &lt;li&gt;Closed-source software, even if it is not required to preserve anonymity, is likely to be vulnerable to non-anonymity security bugs due to lack of peer review.  At this point we’re not even talking about repressive governments &lt;em&gt;deanonymizing&lt;/em&gt; users, we’re talking about repressive governments &lt;em&gt;obtaining remote code execution&lt;/em&gt; on dissidents’ machines.  At that point dissidents are screwed.&lt;/li&gt;
  &lt;li&gt;These closed-source censorship circumvention systems consider the centralized operators to be completely trusted 3rd parties.  There is nothing preventing these operators from covertly collecting logs of the activity of dissidents, and selling them to the highest bidder (which will probably be the governments of the countries in which the dissidents reside).  Even in the fictional scenario where these operators don’t intend to do this, an intelligence agency who compromises the operators’ infrastructure can pull off this attack without the operators’ knowledge or consent.  Again, at this point dissidents are screwed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have signed an open letter asking Members of U.S. Congress to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Require USAGM to honor existing FY2019 and FY2020 spending plans to support the Open Technology Fund;&lt;/li&gt;
  &lt;li&gt;Require all US-Government internet freedom funds to be awarded via an open, fair, competitive, and evidence-based decision process;&lt;/li&gt;
  &lt;li&gt;Require all internet freedom technologies supported with US-Government funds to remain fully open-source in perpetuity;&lt;/li&gt;
  &lt;li&gt;Require regular security audits for all internet freedom technologies supported with US-Government funds; and&lt;/li&gt;
  &lt;li&gt;Pass the Open Technology Fund Authorization Act.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While it is regrettable that so much Internet Freedom infrastructure is dependent on OTF (Decentralize All The Things!), and it would be advisable for affected projects to investigate diversifying their funding sources, that cannot be done overnight.  The damage done by a successful hijacking of OTF &lt;em&gt;will&lt;/em&gt; occur overnight, and will cause lasting damage that cannot be mitigated by a long-term strategy of diversification.  As such, it is critical that the decentralization community oppose the OTF takeover.&lt;/p&gt;

&lt;p&gt;Help us save OTF from takeover.  &lt;a href=&quot;https://saveinternetfreedom.tech/information/how-to-help/&quot;&gt;You can find more information on how to help here.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/07/08/we-oppose-the-takeover-of-open-technology-fund.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/07/08/we-oppose-the-takeover-of-open-technology-fund.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Electrum-NMC v3.3.10 Released</title>
        <description>&lt;p&gt;We’ve released Electrum-NMC v3.3.10.  This release (which is still based on upstream Electrum v3.3.8) includes a few high-demand bug fixes that we wanted to get released before upstream Electrum tags v4.0.0.&lt;/p&gt;

&lt;p&gt;Here’s what’s new since v3.3.9.1:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From upstream Electrum:
    &lt;ul&gt;
      &lt;li&gt;Build script fixes.  (Backported from Electrum v4.0.0.)&lt;/li&gt;
      &lt;li&gt;Fix connecting to non-DNS IPv6 servers on Windows.  (Backported from Electrum v4.0.0.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Namecoin-specific:
    &lt;ul&gt;
      &lt;li&gt;Features:
        &lt;ul&gt;
          &lt;li&gt;Enable Renew/Configure buttons based on selection.  (Patch by Jeremy Rand.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Bug fixes:
        &lt;ul&gt;
          &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; fault detection.  (Patch by Jeremy Rand; thanks to s7r for reporting issue.)&lt;/li&gt;
          &lt;li&gt;Fix exception when right-clicking on a &lt;code class=&quot;highlighter-rouge&quot;&gt;name_new&lt;/code&gt; for which the name identifier is unknown in &lt;code class=&quot;highlighter-rouge&quot;&gt;UNOList&lt;/code&gt;.  (Patch by Jeremy Rand; thanks to ghost for reporting issue.)&lt;/li&gt;
          &lt;li&gt;Fix exception handling in name registration Qt GUI.  (Patch by Jeremy Rand; thanks to s7r for reporting issue.)&lt;/li&gt;
          &lt;li&gt;Fix Mempool-based fee estimation limits.  (Patch by Jeremy Rand; thanks to s7r for reporting issue.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unfortunately, due to a currently-unresolved upstream bug, we are not able to provide Android/Linux binaries at this time.  Android/Linux users should remain on v3.3.9.1.&lt;/p&gt;

&lt;p&gt;As usual, you can download it at the &lt;a href=&quot;/download/betas/#electrum-nmc&quot;&gt;Beta Downloads page&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/06/07/electrum-nmc-v3.3.10-released.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/06/07/electrum-nmc-v3.3.10-released.html</guid>
        
        <category>Releases</category>
        
        <category>Electrum Releases</category>
        
        
      </item>
    
      <item>
        <title>Deterministic Salts</title>
        <description>&lt;p&gt;When Namecoin was first being designed, an attack had to be dealt with: the &lt;em&gt;frontrunning attack&lt;/em&gt;.  The attack works like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Julian broadcasts a transaction, indicating that he wants to buy &lt;code class=&quot;highlighter-rouge&quot;&gt;wikileaks.bit&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Keith sees Julian’s transaction as soon as it gets broadcasted.&lt;/li&gt;
  &lt;li&gt;Keith infers that Julian places a significant value on &lt;code class=&quot;highlighter-rouge&quot;&gt;wikileaks.bit&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Keith broadcasts his own transaction, trying to buy &lt;code class=&quot;highlighter-rouge&quot;&gt;wikileaks.bit&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Keith bribes a miner to mine his transaction rather than Julian’s.  (This could be done by using a much higher transaction fee than Julian’s transaction, or it could be done via out-of-band channels, perhaps a court order.)&lt;/li&gt;
  &lt;li&gt;Keith now owns &lt;code class=&quot;highlighter-rouge&quot;&gt;wikileaks.bit&lt;/code&gt;, not Julian, even though Julian was the first person to try to buy it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Astute readers will note that the fundamental problem here is that DNS-like systems are supposed to be “first-come-first-served”, but a blockchain isn’t able to meaningfully determine which transaction came first if they were both broadcasted before either was mined.  Similar problems happen in Bitcoin when an attacker tries to spend the same coins to two different destination addresses at the same block height: there’s no reliable way to determine which spend came first, so it’s up to the miners to decide.&lt;/p&gt;

&lt;p&gt;So, how was this fixed?  Via &lt;em&gt;commitments&lt;/em&gt;.  When Julian wants to buy &lt;code class=&quot;highlighter-rouge&quot;&gt;wikileaks.bit&lt;/code&gt;, he first broadcasts a &lt;em&gt;commitment&lt;/em&gt; transaction.  The transaction doesn’t reveal the name he wants to buy; it instead consists of a hash of two things: the name he wants to buy, and a secret randomly generated string (called a &lt;em&gt;salt&lt;/em&gt;).  Without knowing the salt and the name already, Keith can’t determine what name Julian is buying.  And since the salt is randomly generated and is high in entropy, Keith can’t even mount a dictionary attack on the hash; even if Keith suspects that Julian is buying &lt;code class=&quot;highlighter-rouge&quot;&gt;wikileaks.bit&lt;/code&gt;, Keith can’t verify this without knowing the salt.&lt;/p&gt;

&lt;p&gt;After the commitment transaction has received 12 confirmations, Julian broadcasts a 2nd transaction that reveals the name and the salt.  Once this 2nd transaction is mined, Julian officially owns &lt;code class=&quot;highlighter-rouge&quot;&gt;wikileaks.bit&lt;/code&gt;.  The key point here is that once the 2nd transaction is broadcasted, Julian only needs 1 block to be mined in order to obtain the name – but if Keith tries to register it, he’ll need to broadcast his own commitment (now that he knows the name) and wait for 12 blocks before he can register the name.  In other words, the existence of the commitment gives Julian a 12-block head start against Keith, which should ensure that Julian gets the name (unless Keith has successfully bribed the miners of 12 blocks in a row, which seems unlikely).&lt;/p&gt;

&lt;p&gt;This scheme brings important security, but it also poses a problem.  Imagine the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Matthew broadcasts a commitment transaction for &lt;code class=&quot;highlighter-rouge&quot;&gt;theintercept.bit&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Sometime in the next 12 blocks, Matthew’s hard drive dies.&lt;/li&gt;
  &lt;li&gt;Matthew restores his wallet from his seed phrase on another machine.&lt;/li&gt;
  &lt;li&gt;Matthew tries to register &lt;code class=&quot;highlighter-rouge&quot;&gt;theintercept.bit&lt;/code&gt; by spending the commitment transaction in his wallet.&lt;/li&gt;
  &lt;li&gt;Uh oh.  Matthew’s wallet doesn’t know what the salt is!  It was only on the hard drive that died.  Matthew forfeits the name registration fee, and has to start over.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Can we improve this situation?  Yes!  The answer is &lt;em&gt;deterministic salts&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;On a high level, we want the wallet application to pick a salt that is reliably predictable to the wallet owner, but still unpredictable to anyone else.  We homed in on the following secret knowledge:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The private key of the address that owns the commitment transaction.&lt;/li&gt;
  &lt;li&gt;The name being registered.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We don’t want the name to be the only input to the salt, since at that point the salt is pretty much ineffectual: remember that the purpose of the salt is to stop people who can guess the name from figuring out whether their guess is accurate!  We also don’t want the private key to be the only input, because this would imply predictable salt reuse if address reuse occurs.  (Yes, I know, address reuse is bad.  But address reuse is typically only a privacy harm; there’s no reason to unnecessarily exacerbate the impact of address reuse by turning it into a name theft harm too.)&lt;/p&gt;

&lt;p&gt;So, how do we combine the private key and the name to get a salt?  It turns out that there’s a standard cryptographic function for this: &lt;a href=&quot;https://tools.ietf.org/html/rfc5869&quot;&gt;HKDF (RFC 5869)&lt;/a&gt;.  Conveniently, HKDF is already present in both Bitcoin Core and Electrum, so no additional libraries need to be imported.  Specifically, we can use the following HKDF parameters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Initial key material: private key&lt;/li&gt;
  &lt;li&gt;Salt: name identifier&lt;/li&gt;
  &lt;li&gt;Info: “Namecoin Registration Salt”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The “Info” parameter is designed to prevent cross-protocol attacks, where someone uses the same construction for two completely different purposes in order to induce a user of one protocol to compromise themselves in the other protocol.&lt;/p&gt;

&lt;p&gt;I’ve now implemented HKDF-based deterministic salts in Electrum-NMC.  For example, you can now do the following command as before:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name_new(&quot;d/example&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you’ll get back a transaction and a salt, like before.  But, you’re now free to ignore this salt, because you don’t need it anymore!  You can complete the registration 12 blocks later like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name_firstupdate(&quot;d/example&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that you don’t need to enter a salt or a TXID anymore!  Electrum-NMC checks each &lt;code class=&quot;highlighter-rouge&quot;&gt;name_new&lt;/code&gt; UTXO in its wallet to see if the output of HKDF yields the commitment in the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_new&lt;/code&gt;, and if it does, Electrum-NMC uses that TXID and salt automatically.  This works even if you’re running &lt;code class=&quot;highlighter-rouge&quot;&gt;name_firstupdate&lt;/code&gt; after restoring the wallet from a seed on a different machine than the one that produced the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_new&lt;/code&gt; transaction.&lt;/p&gt;

&lt;p&gt;Pretty cool, huh?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks to s7r for the idea of deterministic salts; thanks to Ryan Castellucci for cryptographic advice; and thanks to Daniel Kraft for discussions about Namecoin Core integration.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/05/10/deterministic-salts.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/05/10/deterministic-salts.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Video Recordings of ICANN60 Joint Meeting of ICANN Board and Technical Experts Group</title>
        <description>&lt;p&gt;At Namecoin, we generally try to be good citizens in the broader community.  This means that we regularly engage in analysis, peer review, and patch writing for projects that aren’t strictly part of Namecoin.  In that spirit, today we are posting free-software-friendly video recordings of the Joint Meeting of the ICANN Board and the ICANN Technical Experts Group at ICANN60 in Abu Dhabi on November 1, 2017.  We hope that making this session more accessible to free software users will facilitate increased peer review, analysis, and research.&lt;/p&gt;

&lt;p&gt;This session included the following presentations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Alain Durand and Fernando Lopez: &lt;em&gt;DOA-like Persistent Identifiers over DNS: a Prototype&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Leonard Tan: &lt;em&gt;Ethereum Name Service&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Michael Palage and Pindar Wong: &lt;em&gt;Distributed Ledger Technology (aka Blockchain): Evolution or Revolution&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Steve Crocker: &lt;em&gt;Tamperproof Root Zone Management System&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;low-quality-free-software-friendly-video-recording-with-slides&quot;&gt;Low-Quality Free-Software-Friendly Video Recording (With Slides)&lt;/h2&gt;

&lt;video controls=&quot;&quot;&gt;
&lt;source src=&quot;https://www.namecoin.org/files/videos/icann-60/ICANN-60-Joint-Meeting-ICANN-Board-and-Technical-Experts-Group-LQ-Video-with-Slides.webm#t=62&quot; type=&quot;video/webm&quot; /&gt;
Video with slides.
&lt;/video&gt;

&lt;h2 id=&quot;high-quality-free-software-friendly-video-recording-without-slides&quot;&gt;High-Quality Free-Software-Friendly Video Recording (Without Slides)&lt;/h2&gt;

&lt;video controls=&quot;&quot;&gt;
&lt;source src=&quot;https://www.namecoin.org/files/videos/icann-60/ICANN-60-Joint-Meeting-ICANN-Board-and-Technical-Experts-Group-HQ-Video-Only.webm#t=624&quot; type=&quot;video/webm&quot; /&gt;
Video without slides.
&lt;/video&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;p&gt;The above free-software-friendly recordings are converted from &lt;a href=&quot;https://icann60abudhabi2017.sched.com/event/CbHh/joint-meeting-icann-board-technical-experts-group-teg&quot;&gt;ICANN’s official recordings&lt;/a&gt;.  Copyright ICANN; used with permission.  Additional material, e.g. audio-only recordings, slides, and transcripts, can be found on ICANN’s website.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/04/30/icann-60-teg-recordings.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/04/30/icann-60-teg-recordings.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Merchandise Now Available at Cypher Market</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.cyphermarket.com/namecoin/&quot;&gt;Namecoin-branded merchandise&lt;/a&gt; (e.g. T-shirts and stickers) are now for sale from our friends at Cypher Market.  Not only is this a good way to spread the word about Namecoin, but Cypher Market also donates a cut of the profits to support Namecoin development.&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/04/24/merchandise-cypher-market.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/04/24/merchandise-cypher-market.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Electrum-NMC v3.3.9.1 Released</title>
        <description>&lt;p&gt;We’ve released Electrum-NMC v3.3.9.1.  This release (which is still based on upstream Electrum v3.3.8) includes a few high-demand new features and bug fixes that we wanted to get released before upstream Electrum tags v4.0.0.&lt;/p&gt;

&lt;p&gt;Here’s what’s new since v3.3.8:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From upstream Electrum:
    &lt;ul&gt;
      &lt;li&gt;Build script fixes backported from Electrum v4.0.0.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Namecoin-specific:
    &lt;ul&gt;
      &lt;li&gt;Features:
        &lt;ul&gt;
          &lt;li&gt;Add DNS builder GUI based on Namecoin Core.  (Patch by Jeremy Rand; based on a Namecoin Core patch by Brandon Roberts.)&lt;/li&gt;
          &lt;li&gt;Add more servers.  (Patches by Jeremy Rand; thanks to deafboy, ccomp, and s7r for running the servers.)&lt;/li&gt;
          &lt;li&gt;Allow pausing network on startup; unpause via an RPC command (mostly relevant for Tor Browser integration).  (Patch by Jeremy Rand; thanks to Georg Koppen and mjgill89 for reporting Tor Browser issue; thanks to SomberNight for brainstorming solutions.)&lt;/li&gt;
          &lt;li&gt;Update checkpoint.  (Patch by Jeremy Rand.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Bug fixes:
        &lt;ul&gt;
          &lt;li&gt;Return correct error code when looking up nonexistent names.  Fixes issue where ncdns was recognizing this error as &lt;code class=&quot;highlighter-rouge&quot;&gt;SERVFAIL&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;NXDOMAIN&lt;/code&gt;.  (Patch by Jeremy Rand; thanks to Georg Koppen for reporting Tor Browser issue.)&lt;/li&gt;
          &lt;li&gt;Fix connectivity issues that could cause slow syncup or syncup getting stuck completely (these bugs were related to the stream isolation and parallel chain download patches).  (Patches by Jeremy Rand; thanks to Georg Koppen, mjgill89, and s7r for reporting issues.)&lt;/li&gt;
          &lt;li&gt;Fix minor error handling bugs in name registration GUI and &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; RPC command.  (Patches by Jeremy Rand; thanks to s7r for reporting issues.)&lt;/li&gt;
          &lt;li&gt;Add some additional AuxPoW checks.  (Patches by Jeremy Rand.)&lt;/li&gt;
          &lt;li&gt;Disable stream-isolated server pool if in &lt;code class=&quot;highlighter-rouge&quot;&gt;oneserver&lt;/code&gt; mode (fixes a privacy leak).  (Patch by Jeremy Rand; thanks to s7r for reporting issue.)&lt;/li&gt;
          &lt;li&gt;Fix missing help text for &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; RPC command.  (Patch by Jeremy Rand.)&lt;/li&gt;
          &lt;li&gt;Fix missing locale data in Python binaries.  (Patch by Jeremy Rand.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As usual, you can download it at the &lt;a href=&quot;/download/betas/#electrum-nmc&quot;&gt;Beta Downloads page&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/04/17/electrum-nmc-v3.3.9.1-released.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/04/17/electrum-nmc-v3.3.9.1-released.html</guid>
        
        <category>Releases</category>
        
        <category>Electrum Releases</category>
        
        
      </item>
    
      <item>
        <title>Transproxy Support in ZeroNet</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://zeronet.io/&quot;&gt;ZeroNet&lt;/a&gt; supports Namecoin as a naming layer.  Unfortunately, the UX for this feature isn’t quite optimal.  Specifically, the &lt;code class=&quot;highlighter-rouge&quot;&gt;.bit&lt;/code&gt; domain shows up in the path of the URL rather than the hostname; the hostname is the hostname of the machine running ZeroNet (typically &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;).  Can this be improved?&lt;/p&gt;

&lt;p&gt;In a word, yes.  I’ve added &lt;em&gt;transproxy&lt;/em&gt; support to ZeroNet, which facilitates a much better UX.  This feature uses the HTTP Host header to determine which &lt;code class=&quot;highlighter-rouge&quot;&gt;.bit&lt;/code&gt; site is being accessed.  So if the &lt;code class=&quot;highlighter-rouge&quot;&gt;.bit&lt;/code&gt; site points to &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;, you can type in the domain into your web browser, and your browser will automagically tell ZeroNet which website to display.&lt;/p&gt;

&lt;p&gt;As an example, here’s ZeroTalk displayed in Firefox in transproxy mode:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/zeronet/zeronet-trans-proxy-2018-08-01.png&quot; alt=&quot;A screenshot of ZeroTalk; the URL bar shows &amp;quot;talk.zeronetwork.bit&amp;quot;.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This screenshot was obtained by fiddling with the OS’s &lt;code class=&quot;highlighter-rouge&quot;&gt;hosts&lt;/code&gt; file, but automatic ZeroNet integration could be added to ncdns in the future.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/04/09/transproxy-support-in-zeronet.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/04/09/transproxy-support-in-zeronet.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Website Now Available via Namecoin at Namecoin.bit</title>
        <description>&lt;p&gt;The Namecoin website is now available via Namecoin at &lt;a href=&quot;https://namecoin.bit/&quot;&gt;https://namecoin.bit/&lt;/a&gt;.  The TLS certificate should work in most Namecoin-supported &lt;a href=&quot;/docs/tls-client&quot;&gt;TLS clients&lt;/a&gt;, but unfortunately doesn’t yet work with Tor Browser.  This will be fixed in the future.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/04/02/namecoin.bit.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/04/02/namecoin.bit.html</guid>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Electrum-NMC: ETA Display for Name Registrations</title>
        <description>&lt;p&gt;Recently, I was put in contact (via a mutual friend) with a new Namecoin user, Forest Johnson, who was having some trouble registering a name with Electrum-NMC.  Unlike typical software users, who tend to give up when encountering issues, Forest was kind enough to provide &lt;a href=&quot;https://www.sequentialread.com/how-to-register-a-namecoin-bit-domain-with-electrum-nmc/&quot;&gt;some excellent UX review&lt;/a&gt; of Electrum-NMC.  One piece of that UX review was that it’s not obvious to a user that registering a name is a two-step process, and that the latter step can’t proceed until the former step has 12 confirmations.  So, I’ve added an ETA indicator for name registrations to the Manage Names tab.  Check it out:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/electrum-nmc/2020-02-20-Registration-ETA.png&quot; alt=&quot;A screenshot of the Manage Names tab in Electrum-NMC showing &amp;quot;ETA 130min&amp;quot;.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Forest provided quite a bit of additional UX review; I intend to address those points in the future.  Thanks Forest for making Namecoin better!&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org//2020/02/27/electrum-nmc-name-registration-eta-display.html</link>
        <guid isPermaLink="true">https://www.namecoin.org//2020/02/27/electrum-nmc-name-registration-eta-display.html</guid>
        
        <category>News</category>
        
        
      </item>
    
  </channel>
</rss>
