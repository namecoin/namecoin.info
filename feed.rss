<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Namecoin</title>
    <description><!--Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
--></description>
    <link>https://www.namecoin.org/</link>
    <atom:link href="https://www.namecoin.org/feed.rss" rel="self" type="application/rss+xml" />
    <language>en</language>
    <pubDate>Thu, 07 Jan 2021 08:07:08 +0000</pubDate>
    <lastBuildDate>Thu, 07 Jan 2021 08:07:08 +0000</lastBuildDate>
    <generator>Jekyll</generator>
    <image>
      <url>https://www.namecoin.org/images/logo.png</url>
      <title>Namecoin</title>
      <link>https://www.namecoin.org/</link>
      <width>134</width>
      <height>25</height>
    </image>
    
      <item>
        <title>Namecoin Presentation at Grayhat 2020 Monero Village</title>
        <description>&lt;p&gt;I gave a talk on October 31, 2020, at the &lt;a href=&quot;https://grayhat.co/&quot;&gt;Grayhat 2020&lt;/a&gt; &lt;a href=&quot;https://monerovillage.org/&quot;&gt;Monero Village&lt;/a&gt;, entitled “Namecoin as a Decentralized Alternative to Certificate Authorities for TLS”.  A video recording is below:&lt;/p&gt;

&lt;video controls=&quot;&quot;&gt;
&lt;source src=&quot;https://www.namecoin.org/files/videos/grayhat-2020/Grayhat-2020-Namecoin.webm&quot; type=&quot;video/webm&quot; /&gt;
Video of &quot;Namecoin as a Decentralized Alternative to Certificate Authorities for TLS&quot; at Grayhat 2020.
&lt;/video&gt;

&lt;p&gt;Slides are here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/resources/presentations/Grayhat_2020/Namecoin_TLS_Part_1_Grayhat_2020_Monero_Village.pdf&quot;&gt;Slides (Part 1)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/resources/presentations/Grayhat_2020/Namecoin_TLS_Part_2_Grayhat_2020_Monero_Village.pdf&quot;&gt;Slides (Part 2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Huge thanks to Diego “rehrar” Salazar from Monero for inviting me!&lt;/p&gt;

&lt;p&gt;License information: Diego’s introduction in the video is under a CC-BY 4.0 license.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2021/01/01/namecoin-at-grayhat-2020-monero-village.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2021/01/01/namecoin-at-grayhat-2020-monero-village.html</guid>
        <dc:creator>Jeremy Rand</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Will Present at Next Generation Internet Webinar on Naming Systems</title>
        <description>&lt;p&gt;I will present at the webinar &lt;a href=&quot;https://www.ngi.eu/event/ngi-projects-contribution-to-technological-developments-of-dns-and-naming-systems/?instance_id=423&quot;&gt;“Next Generation Internet projects’ contribution to technological developments of DNS and naming systems”&lt;/a&gt; hosted by NLnet Foundation.&lt;/p&gt;

&lt;p&gt;The presentation will cover work by Lola, yanmaani, and Ahmed.  It will be December 10, 2020, 2:00 pm – 4:00 pm CET, and should be open to the public &lt;a href=&quot;https://bbb.tbm.tudelft.nl/b/mic-hhp-gxg-uyc&quot;&gt;via NLnet Foundation&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/12/09/namecoin-will-present-at-ngi-webinar.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/12/09/namecoin-will-present-at-ngi-webinar.html</guid>
        <dc:creator>Jeremy Rand</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Core Name Renew GUI</title>
        <description>&lt;p&gt;Now that Namecoin Core’s &lt;a href=&quot;/2020/08/23/namecoin-core-name-list-gui.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;name_list&lt;/code&gt; GUI&lt;/a&gt; is merged to &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch (it’ll be in the v22.0 release!), it’s time to move on to renewing names.  As with the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_list&lt;/code&gt; GUI, I’m trying to follow the principles of (1) keeping PR’s small, and (2) keeping all the interesting logic in the RPC method rather than the GUI.&lt;/p&gt;

&lt;p&gt;In service of principle 1, I’m not touching the “Configure Name” GUI, nor am I touching the “Renew Name” button; this only adds the right-click context menu for renewing names.  In service of principle 2, yanmaani has done the excellent work of &lt;a href=&quot;/2020/12/04/namecoin-core-name-firstupdate-name-update-default-values.html&quot;&gt;adding a renew mode&lt;/a&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_update&lt;/code&gt; RPC method, which simplifies the GUI logic considerably.&lt;/p&gt;

&lt;p&gt;So, without further rambling, here are some screenshots:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/namecoin-core/name-renew-single-context-menu-2020-12-04.png&quot; alt=&quot;A screenshot of the Renew Names context menu in Namecoin-Qt.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/namecoin-core/name-renew-single-confirmation-2020-12-04.png&quot; alt=&quot;A screenshot of the Renew Names confirmation dialog in Namecoin-Qt.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/namecoin-core/name-renew-multiple-context-menu-2020-12-04.png&quot; alt=&quot;A screenshot of the Renew Names context menu for multiple names in Namecoin-Qt.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/namecoin-core/name-renew-multiple-confirmation-2020-12-04.png&quot; alt=&quot;A screenshot of the Renew Names confirmation dialog for multiple names in Namecoin-Qt.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Astute readers will have noticed that you can now renew multiple names at once, like in Electrum-NMC.  This was a minimal enough change from Brandon’s GUI that I figured I’d toss it in.&lt;/p&gt;

&lt;p&gt;Some more code review will be needed, but I don’t expect any major obstacles getting this merged.&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/12/05/namecoin-core-name-renew-gui.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/12/05/namecoin-core-name-renew-gui.html</guid>
        <dc:creator>Jeremy Rand</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Core name_firstupdate, name_update default values</title>
        <description>&lt;p&gt;Namecoin Core will, starting version 0.21, no longer require for a value to be provided in the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_update&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;name_firstupdate&lt;/code&gt; RPC calls. If no value is provided, Namecoin Core will use the last known such. If none exists, the empty string will be used. This change has no adverse impact on existing workflows, since it only makes previously required parameters optional. However, it does make it easier to update names. If no change in the value is desired, users will be able to directly issue an update for the name, without having to interrogate the present value with &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt;. This simplifies a common workflow.&lt;/p&gt;

&lt;p&gt;This change is being made as part of the effort to simplify the RPC API for name management.&lt;/p&gt;
</description>
        <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/12/04/namecoin-core-name-firstupdate-name-update-default-values.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/12/04/namecoin-core-name-firstupdate-name-update-default-values.html</guid>
        <dc:creator>yanmaani</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Notes on building Python for Windows using RBM</title>
        <description>&lt;p&gt;Namecoin would like for Tor Browser to support .bit domains.  The only mature, lightweight way to do this is to use the wallet qua name resolver Electrum-NMC.  It is written in Python.  To run Python software, you need an interpreter, like CPython.&lt;/p&gt;

&lt;p&gt;Namecoin and Tor are both intended to be secure projects.  All their binaries have to build reproducibly.  The Tor Browser is also intended to be portable.  It’s not acceptable for users to have to install additional software on their computer to run Tor Browser.&lt;/p&gt;

&lt;p&gt;This means a Python interpreter would have to be bundled in order for Electrum-NMC to be includible in Tor Browser.  And since Tor Browser is a secure project, said Python interpreter has to be built reproducibly.  For this reason, the &lt;code class=&quot;highlighter-rouge&quot;&gt;tor-browser-build&lt;/code&gt; repository has received some patches to reproducibly build such binaries.&lt;/p&gt;

&lt;p&gt;This post details the problems encountered while making them.&lt;/p&gt;

&lt;p&gt;Building CPython reproducibly for Linux is trivial.  Download the source code, patch it to disable build timestamps, and compile.  That’s it, you’re done.&lt;/p&gt;

&lt;p&gt;The situation is markedly different on Windows.  The official Python documentation suggests &lt;a href=&quot;https://github.com/python/cpython/blob/master/PCbuild/readme.txt&quot;&gt;building with Microsoft Visual Studio 2017&lt;/a&gt;.  This is no good.  That compiler doesn’t support reproducible builds, it’s closed-source, and it would have to run in Wine.&lt;/p&gt;

&lt;p&gt;There should be another way.  CPython is written in standard C.  GCC can cross-compile C software for Windows using MinGW - the compiler runs on Linux, but produces binaries for Windows.  That’s how the Tor Project build Tor Browser for Windows.  In theory, it should be possible to use GCC to cross-compile CPython for Windows, and a lot of Tor’s tooling should be possible to re-use.&lt;/p&gt;

&lt;p&gt;In practice, Python’s ordinary build system doesn’t support this.  It isn’t made for cross-compilation.  Thankfully, one &lt;a href=&quot;https://github.com/erikjanss&quot;&gt;Erik Janssens&lt;/a&gt; had created an alternative &lt;a href=&quot;https://mesonbuild.com/&quot;&gt;Meson&lt;/a&gt;-based &lt;a href=&quot;https://github.com/v-finance/cross-python&quot;&gt;build script&lt;/a&gt; to compile Python for Windows with Linux using GCC and MinGW.  Many thanks!&lt;/p&gt;

&lt;p&gt;This build script needed some minor adaptations to properly integrate it with the Tor Project’s RBM build system.  Meson and RBM both have built-in features for dependency handling, such as downloading files from URLs, verifying their hashes, and caching them.  Doing this requires Internet access.  When compiling, RBM disables Internet access.&lt;/p&gt;

&lt;p&gt;The configuration script will thus have to download the binaries and move them into the cache directory used by Meson.  This change also makes the build faster - RBM uses a fresh VM for each build, so unless the cache is outside of the VM, it will be wiped on each new build.&lt;/p&gt;

&lt;p&gt;After this was done, RBM was able to produce something resembling a Python 3.8 interpreter.  However, it wasn’t functional.  Owing to what presumably was an idiosyncracy of the MinGW system, a critical library named &lt;code class=&quot;highlighter-rouge&quot;&gt;libwinpthread-1.dll&lt;/code&gt; wasn’t included.&lt;/p&gt;

&lt;p&gt;This problem turned out to be easy to fix.  Ruben Van Boxem, a contributor to the MinGW project, &lt;a href=&quot;https://stackoverflow.com/a/14033674&quot;&gt;suggested&lt;/a&gt; on StackOverflow that the compiler/linker simply be explicitly told to link this library statically.  This worked:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wine python.exe
Python 3.8.5 (default, xx/xx/xx, xx:xx:xx) [gcc] on win32
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The changes are now submitted and subject to review.&lt;/p&gt;

&lt;p&gt;We think other projects that use Python might find these efforts useful.  In particular, upstream Electrum may benefit from using a reproducible build of Python.  We want to help others, so we try to submit patches and contribute where appropriate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The RBM build descriptor carries a custom patch to omit build timestamps in CPython.  With this merged upstream, reproducible builds of CPython would become easier, and the maintenance burden lower.&lt;/li&gt;
  &lt;li&gt;I have submitted some &lt;a href=&quot;https://github.com/v-finance/cross-python/pull/1&quot;&gt;minor documentation changes&lt;/a&gt; for Mr. Janssens’s build script.&lt;/li&gt;
  &lt;li&gt;The RBM build descriptor can be used to build Python, without necessarily building the Tor Browser.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/10/21/notes-on-building-python-for-windows-using-rbm.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/10/21/notes-on-building-python-for-windows-using-rbm.html</guid>
        <dc:creator>yanmaani</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Porting Namecoin in Tor Browser to Windows</title>
        <description>&lt;p&gt;As you no doubt remember &lt;a href=&quot;/2020/01/11/36c3-summary.html&quot;&gt;from 36C3&lt;/a&gt;, the GNU/Linux version of Tor Browser Nightly comes with Namecoin support included.  While we’ve received significant test feedback (overwhelmingly positive), it’s been pointed out that supporting Windows would enable additional test feedback, since not everyone has a GNU/Linux machine to test things on.  So, I’ve been porting the Namecoin support in Tor Browser Nightly to Windows.&lt;/p&gt;

&lt;h2 id=&quot;stemns-and-tor-bootstrap&quot;&gt;StemNS and Tor Bootstrap&lt;/h2&gt;

&lt;p&gt;First off, since this endeavor was going to involve some changes to StemNS, I figured this was a good opportunity to investigate an odd bug that was happening in StemNS sometimes.  I had noticed last year that in a fresh Tor Browser install, if Namecoin was enabled on the first run, Tor Launcher would indicate that Tor bootstrap had stalled at the “loading authority certificates” stage.  I found that spamming the Tor Launcher buttons to cancel and retry connecting would usually make the connection succeed after 5-10 tries, which seemed to suggest a race condition.  After quite a lot of manual inspection of StemNS logs, I found something odd.&lt;/p&gt;

&lt;p&gt;While the Tor control spec states that the &lt;code class=&quot;highlighter-rouge&quot;&gt;__LeaveStreamsUnattached&lt;/code&gt; config option will cause all streams to wait for the controller (StemNS in this case) to attach them, this was empirically not what was happening.  Rather, streams created as a result of user traffic (e.g. Firefox or Electrum-NMC) were waiting for StemNS to attach them, but streams created by Tor’s bootstrap were still automatically being attached.  The Tor control spec goes on to say the following:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Attempting to attach streams
via TC when “__LeaveStreamsUnattached” is false may cause a race between
Tor and the controller, as both attempt to attach streams to circuits.&lt;/p&gt;

  &lt;p&gt;You can try to attachstream to a stream that
has already sent a connect or resolve request but hasn’t succeeded
yet, in which case Tor will detach the stream from its current circuit
before proceeding with the new attach request.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This certainly explained what had been happening.  Tor was opening a stream to bootstrap (attaching the stream to a circuit in the process), and (depending on exact timing) StemNS was trying to attach it a 2nd time, which caused the stream to be detached, thus killing the bootstrap.&lt;/p&gt;

&lt;p&gt;At this point, I decided to ask the Tor developers whether this was a bug in the spec or the C implementation.  Roger Dingledine pointed me to the exact C code that handled this, which indicated exactly how StemNS could detect this case and handle it properly.  Roger also indicated that the C code was correct, and that the spec was incorrect.  I concurred that this made sense.&lt;/p&gt;

&lt;p&gt;I was then able to modify StemNS to handle this properly by detecting whether a new stream was created by user traffic or internal bootstrap, and only attaching streams from the former.  Testing confirmed that the bug was fixed.  Great, now let’s move on.&lt;/p&gt;

&lt;h2 id=&quot;exiting-namecoin-when-tor-browser-exits&quot;&gt;Exiting Namecoin when Tor Browser Exits&lt;/h2&gt;

&lt;p&gt;The existing Namecoin support in Tor Browser relies on a Bash script that signals Electrum-NMC and StemNS to exit after Firefox exits.  Alas, Bash is only used as a launcher in GNU/Linux, so I needed to port this to a more cross-platform approach.&lt;/p&gt;

&lt;p&gt;Tor Browser already solves this problem for the Tor daemon: Tor needs to exit when Firefox has done so.  Tor Browser does this by having Firefox send the &lt;code class=&quot;highlighter-rouge&quot;&gt;TAKEOWNERSHIP&lt;/code&gt; command to Tor, which instructs Tor to exit when Firefox closes the control port connection.  This inspired me to do something similar in StemNS: I added an event listener to StemNS that triggers when Tor closes the control port connection to StemNS (which will happen when Tor exits).  I configured the event listener to send an RPC &lt;code class=&quot;highlighter-rouge&quot;&gt;stop&lt;/code&gt; command to Electrum-NMC (which will make Electrum-NMC exit), and then exit StemNS as well.  (The latter took some DuckDuckGo-fu, as it turns out that &lt;code class=&quot;highlighter-rouge&quot;&gt;sys.exit()&lt;/code&gt; can’t be called from a child thread in Python; the correct way to exit from a child thread is &lt;code class=&quot;highlighter-rouge&quot;&gt;os._exit()&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;Some testing revealed that this worked; I was able to remove the Bash code that terminated Electrum-NMC and StemNS, and they still exited properly.  Moving on…&lt;/p&gt;

&lt;h2 id=&quot;launching-namecoin-when-tor-browser-starts&quot;&gt;Launching Namecoin when Tor Browser Starts&lt;/h2&gt;

&lt;p&gt;Of course, the other part of the Bash launcher for Namecoin was the code that launches Electrum-NMC and StemNS.  For this, I ended up copying/pasting the code in Tor Launcher that launches the Tor daemon.  As XPCOM-based JavaScript code goes, Tor Launcher is pretty readable, so the copy/paste job wasn’t particularly eventful.  I &lt;em&gt;did&lt;/em&gt; notice that the documentation for debugging Tor Launcher was outdated, but the Tor developers on IRC were able to point me in the right direction there.&lt;/p&gt;

&lt;p&gt;I won’t bore you with too many details on this part; it was mostly grunt work.  But I got it working.  Excellent, moving on….&lt;/p&gt;

&lt;h2 id=&quot;windows-and-python&quot;&gt;Windows and Python&lt;/h2&gt;

&lt;p&gt;By this point, all of the GNU/Linux-specific code had been replaced with cross-platform code.  So we were ready to move onto enabling Windows support.  Most of this was as simple as tweaking the rbm descriptors to enable Namecoin on Windows, and fixing a few bugs where the Go dependencies for certain rbm projects were wrong on Windows.  But, there was one issue that needed dealing with: Python.&lt;/p&gt;

&lt;p&gt;Both Electrum-NMC and StemNS are written in Python.  GNU/Linux systems generally have Python available by default, but this is not the case for Windows.  In addition, on GNU/Linux, Python scripts are executable programs, but on Windows, they’re data files that need to be explicitly opened with the Python interpreter.  This means that some Windows-specific things need to be done.&lt;/p&gt;

&lt;p&gt;For Python being available, I took the easy way out: I simply defined [1] it to be out of scope, i.e. the user is responsible for installing Python themselves before enabling Namecoin in Tor Browser.  I also rigged Tor Launcher to check every directory in the &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; for a Python interpreter, and to use the discovered Python binary as the executable, passing the Electrum-NMC or StemNS path as a command-line argument instead.  Worked pretty well.&lt;/p&gt;

&lt;p&gt;Finally, I re-implemented verbose logging for Namecoin (which was also part of the Bash code that I had removed).  This was done via a &lt;code class=&quot;highlighter-rouge&quot;&gt;TOR_VERBOSE_NAMECOIN&lt;/code&gt; environment variable.  It does two things when enabled:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Pass the &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; argument to Electrum-NMC, which enables verbose output.&lt;/li&gt;
  &lt;li&gt;On Windows, use &lt;code class=&quot;highlighter-rouge&quot;&gt;python.exe&lt;/code&gt; (which pops up a command prompt window with logs) instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;pythonw.exe&lt;/code&gt; (which doesn’t spawn a command window).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Oh, and I had to tweak the linker flags for &lt;code class=&quot;highlighter-rouge&quot;&gt;ncprop279&lt;/code&gt; to make it avoid launching a command prompt window on Windows as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/tor/tor-browser-windows-2020-08-20.png&quot; alt=&quot;A screenshot of Namecoin in Tor Browser on Windows.&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;epilogue&quot;&gt;Epilogue&lt;/h2&gt;

&lt;p&gt;I sent in the code to the Tor Browser Team, and it’s now awaiting review.&lt;/p&gt;

&lt;p&gt;In the meantime, I noticed that the &lt;code class=&quot;highlighter-rouge&quot;&gt;__LeaveStreamsUnattached&lt;/code&gt; issue has a more correct fix now.  The master branch of Tor and Stem recently added a new stream status, &lt;code class=&quot;highlighter-rouge&quot;&gt;CONTROLLER_WAIT&lt;/code&gt;, which indicates specifically that a stream is now waiting for the controller to attach it.  Thus, I’ve updated StemNS to only check for this status, rather than the mildly-convoluted previously-existing method of guessing whether a stream was waiting for this.  That means StemNS’s master branch is now incompatible with Tor 0.4.5.0, Stem 1.8.0, and earlier.  I’ve tagged a stable release that doesn’t include this refactor, and if any important bugfixes make their way into StemNS before the new Tor and Stem behavior gets into releases, I’ll probably backport them to a stable branch.&lt;/p&gt;

&lt;p&gt;And now, we wait for code review from the Tor Browser Team.  Let the bikeshedding begin!&lt;/p&gt;

&lt;p&gt;This work was funded by Cyphrs and Cyberia Computer Club.&lt;/p&gt;

&lt;p&gt;[1] This is a totally legit usage of definitional discretion.  &lt;a href=&quot;https://old.reddit.com/r/Jokes/comments/77zo3h/an_engineer_a_physicist_and_a_mathematician_are/&quot;&gt;Really.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/10/09/porting-namecoin-in-tor-browser-to-windows.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/10/09/porting-namecoin-in-tor-browser-to-windows.html</guid>
        <dc:creator>Jeremy Rand</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Core name_list GUI</title>
        <description>&lt;p&gt;Namecoin Core’s name management GUI has always been a bit neglected.  While we do have a GUI that works reasonably well, it’s been stuck in an old branch that is nontrivial to forward-port.  The main reason that it’s been hard to maintain is that it depends on internal API’s that often get refactored, which breaks the GUI unless someone volunteers to constantly test the GUI whenever upstream refactors get merged (which is not a great use of anyone’s time).  GUI code is also hard to test on Travis CI compared to CLI-accessible code, which compounds the problem.&lt;/p&gt;

&lt;p&gt;Brandon accurately observed that a way to mitigate this issue is to expose all of the functionality that the GUI needs as RPC methods, and then simply make the GUI call RPC functions.  (Bitcoin Core includes a built-in API for internally calling RPC functions.)  This minimizes the amount of logic that the GUI needs to carry, which both enables integration testing and eliminates private API usage in the GUI code.  This was partially done in Brandon’s branch that was used for the name tab binaries that we released, but unfortunately, there was still some logic that needed internal API’s.&lt;/p&gt;

&lt;p&gt;So, I’m picking up where Brandon left off.  For one thing, I’m splitting the code into multiple PR’s, which can be merged independently: the GUI equivalents of &lt;code class=&quot;highlighter-rouge&quot;&gt;name_list&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;name_update&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;name_autoregister&lt;/code&gt;.  The first of these, &lt;code class=&quot;highlighter-rouge&quot;&gt;name_list&lt;/code&gt;, is used for displaying the current name inventory.  I’ve spent some time forward-porting the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_list&lt;/code&gt; GUI to current Namecoin Core, and here’s a preliminary result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/screenshots/namecoin-core/manage-names-2020-08-19.png&quot; alt=&quot;A screenshot of the Manage Names tab in Namecoin-Qt.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There’s still some more code cleanup needed before it can be merged, but I’m optimistic that we can get a merge to happen soon.&lt;/p&gt;

</description>
        <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/08/23/namecoin-core-name-list-gui.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/08/23/namecoin-core-name-list-gui.html</guid>
        <dc:creator>Jeremy Rand</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Namecoin Core name_show name expiration</title>
        <description>&lt;p&gt;Namecoin Core will, starting version 0.21, change the default behavior of the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; RPC API call in the presence of certain errors to better match the documentation, the behavior of Electrum-NMC, and the behavior expected by users.&lt;/p&gt;

&lt;p&gt;When Namecoin Core was first written, it exposed name resolution using an inconsistent API.
When querying for a name that was not active, the behavior varied by the history of the name.
If it had never been registered, Namecoin would return an error.
If it had once been registered in the past, but was now expired, Namecoin would return a response that was deceptively similar to that returned when querying for names that were still active.&lt;/p&gt;

&lt;p&gt;Owing to this inconsistency, some applications using Namecoin Core came to treat expired names as if they were still active.
This was a security problem.
Users continued to use services identified by the names as usual, and as such their operators did not re-register them, but Namecoin does not afford unregistered names any protection.
Therefore, anyone could have registered the names, thereby hijacking the services.
While this may be considered immaterial, it is our opinion that Namecoin should not indirectly encourage such dangerous use-cases.&lt;/p&gt;

&lt;p&gt;Furthermore, those applications’ use of the API for this purpose was incorrect.
Expired names should not be considered alive, and it can hardly be thought that considering them as such would have been the intent in implementing it.
A programmer who relied solely on the documentation (“Looks up the current data for the given name. Fails if the name doesn’t exist.”) would not be left with the impression that the operation would, in fact, only fail for never-registered names.&lt;/p&gt;

&lt;p&gt;For these reasons, a change to the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; API in Namecoin Core has been made.
&lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; will now by default throw an error when attempting to resolve an expired name.
This brings the default behavior in line with Electrum-NMC, which has always thrown an error.
The old behavior can be preserved by setting the allowExpired option or -allow_expired command-line parameter to true.
There are presently no plans to deprecate these flags.&lt;/p&gt;

&lt;p&gt;This change will be included in version 0.21 of Namecoin Core.
Downstream users who use &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; to resolve names for user-facing purposes should not need to make any changes to their usage.
Downstream users who use &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; to resolve names, but who would also like to distinguish between names that have expired and names that have never been registered, are encouraged to explore the allowExpired field in the JSON RPC options argument and the -allowexpired command line parameter.
In such cases, the old behavior still applies, whereby downstream users are expected to consider the value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;expired&lt;/code&gt; field to ascertain whether a domain has expired.&lt;/p&gt;

&lt;p&gt;This change does not affect the resolution of active names in any way.
This change does not affect the &lt;code class=&quot;highlighter-rouge&quot;&gt;name_history&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;name_scan&lt;/code&gt; RPC calls.
This change does not affect Electrum-NMC.&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/08/22/namecoin-core-name-show-expiration.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/08/22/namecoin-core-name-show-expiration.html</guid>
        <dc:creator>yanmaani</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>We oppose the takeover of Open Technology Fund -- closed-source projects are scams and must not receive &quot;Internet Freedom&quot; funding</title>
        <description>&lt;p&gt;We are watching with alarm the currently-ongoing takeover of the Open Technology Fund (OTF) by the Trump Administration’s newly appointed CEO of the US Agency for Global Media (USAGM, formerly known as BBG), Michael Pack.  In the first week of the new USAGM leadership, Michael has fired OTF CEO Libby Liu and OTF President Laura Cunningham, and (according to a document released by Libby) is apparently preparing to redirect OTF funding away from the current diverse set of open-source tools in favor of a small set of tools, narrowly focused on censorship circumvention, including the closed-source scam projects “Freegate” and “Ultrasurf”.&lt;/p&gt;

&lt;p&gt;Developers of Internet Freedom software, including but not limited to Namecoin, are on the known target lists of intelligence agencies of repressive governments.  The open-source nature of our tools is a prerequisite for users to verify that we have not backdoored the software (e.g. to get dissidents killed).  Furthermore, our own safety as developers is dependent on those intelligence agencies being aware that trying to coerce us to add a backdoor would be futile due to our software’s open-source nature.&lt;/p&gt;

&lt;p&gt;For this reason, Namecoin doesn’t just settle for releasing our code under an OSI/FSF-approved license; we lead by example and push forward the front lines of openness.  For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We strive for reproducible builds in all software we release.&lt;/li&gt;
  &lt;li&gt;We use computers with open-source firmware such as the Asus C201 and the Raptor Talos II for as much of our workflow as possible.&lt;/li&gt;
  &lt;li&gt;We contribute patches to upstream software infrastructure for reproducible builds (e.g. the Gitian and rbm tools used by Tor include patches we authored).&lt;/li&gt;
  &lt;li&gt;We contribute code to software projects improving support for platforms with open-source firmware (e.g. we contribute patches to PrawnOS, we reverse-engineered the Talos II NIC firmware, and we are in the process of porting Tor Browser to ARM and POWER).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us be very clear: software projects that claim to enable “Internet Freedom” but which do not share this commitment to open-source principles are scams.  They actively endanger dissidents who are unwise enough to use them.  Under no circumstances should they receive OTF funding, or any other type of taxpayer-derived funding.&lt;/p&gt;

&lt;p&gt;In addition, the needs of dissidents are substantially more diverse than solely censorship circumvention.  Software to defend against surveillance is also critical, as are security audits, bug bounty programs, and countless other areas that OTF currently funds.  If anything, OTF’s remit would benefit from expansion; narrowing their focus to solely censorship circumvention will leave critical projects in the lurch, endangering the safety of dissidents worldwide.  We are particularly concerned about the harm caused by a narrow focus on censorship circumvention functionality due to the following considerations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Users have empirically been demonstrated to not understand the difference between anonymity and anti-censorship functionality, and giving them software that’s not safe for anonymity will result in many users using it in ways that are dangerous.&lt;/li&gt;
  &lt;li&gt;Even in a fantasy world where 100% of the users who actually need anonymity stick with tools that are safe for that use case, an exodus of the rest of the users will leave the anonymity-requiring users with a dangerously small anonymity set.  It is well-known that the reason NRL opened onion routing to the public is that an anonymity network only used by the US Navy doesn’t actually help anonymize the US Navy.  For the same reason, an anonymity network used by Chinese dissidents who require anonymity to stay safe must have a large amount of cover traffic, and users who are circumventing censorship are a major source of that cover traffic.&lt;/li&gt;
  &lt;li&gt;Censorship circumvention software that relies on security by obscurity is more likely to be censored, potentially with catastrophic timing.&lt;/li&gt;
  &lt;li&gt;Closed-source software, even if it is not required to preserve anonymity, is likely to be vulnerable to non-anonymity security bugs due to lack of peer review.  At this point we’re not even talking about repressive governments &lt;em&gt;deanonymizing&lt;/em&gt; users, we’re talking about repressive governments &lt;em&gt;obtaining remote code execution&lt;/em&gt; on dissidents’ machines.  At that point dissidents are screwed.&lt;/li&gt;
  &lt;li&gt;These closed-source censorship circumvention systems consider the centralized operators to be completely trusted 3rd parties.  There is nothing preventing these operators from covertly collecting logs of the activity of dissidents, and selling them to the highest bidder (which will probably be the governments of the countries in which the dissidents reside).  Even in the fictional scenario where these operators don’t intend to do this, an intelligence agency who compromises the operators’ infrastructure can pull off this attack without the operators’ knowledge or consent.  Again, at this point dissidents are screwed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have signed an open letter asking Members of U.S. Congress to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Require USAGM to honor existing FY2019 and FY2020 spending plans to support the Open Technology Fund;&lt;/li&gt;
  &lt;li&gt;Require all US-Government internet freedom funds to be awarded via an open, fair, competitive, and evidence-based decision process;&lt;/li&gt;
  &lt;li&gt;Require all internet freedom technologies supported with US-Government funds to remain fully open-source in perpetuity;&lt;/li&gt;
  &lt;li&gt;Require regular security audits for all internet freedom technologies supported with US-Government funds; and&lt;/li&gt;
  &lt;li&gt;Pass the Open Technology Fund Authorization Act.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While it is regrettable that so much Internet Freedom infrastructure is dependent on OTF (Decentralize All The Things!), and it would be advisable for affected projects to investigate diversifying their funding sources, that cannot be done overnight.  The damage done by a successful hijacking of OTF &lt;em&gt;will&lt;/em&gt; occur overnight, and will cause lasting damage that cannot be mitigated by a long-term strategy of diversification.  As such, it is critical that the decentralization community oppose the OTF takeover.&lt;/p&gt;

&lt;p&gt;Help us save OTF from takeover.  &lt;a href=&quot;https://saveinternetfreedom.tech/information/how-to-help/&quot;&gt;You can find more information on how to help here.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/07/08/we-oppose-the-takeover-of-open-technology-fund.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/07/08/we-oppose-the-takeover-of-open-technology-fund.html</guid>
        <dc:creator>Jeremy Rand, Daniel Kraft, Andy Colosimo, Ahmed Bodiwala, Somewhat, and Anonymous Namecoin Developer(s)</dc:creator>
        
        <category>News</category>
        
        
      </item>
    
      <item>
        <title>Electrum-NMC v3.3.10 Released</title>
        <description>&lt;p&gt;We’ve released Electrum-NMC v3.3.10.  This release (which is still based on upstream Electrum v3.3.8) includes a few high-demand bug fixes that we wanted to get released before upstream Electrum tags v4.0.0.&lt;/p&gt;

&lt;p&gt;Here’s what’s new since v3.3.9.1:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From upstream Electrum:
    &lt;ul&gt;
      &lt;li&gt;Build script fixes.  (Backported from Electrum v4.0.0.)&lt;/li&gt;
      &lt;li&gt;Fix connecting to non-DNS IPv6 servers on Windows.  (Backported from Electrum v4.0.0.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Namecoin-specific:
    &lt;ul&gt;
      &lt;li&gt;Features:
        &lt;ul&gt;
          &lt;li&gt;Enable Renew/Configure buttons based on selection.  (Patch by Jeremy Rand.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Bug fixes:
        &lt;ul&gt;
          &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;name_show&lt;/code&gt; fault detection.  (Patch by Jeremy Rand; thanks to s7r for reporting issue.)&lt;/li&gt;
          &lt;li&gt;Fix exception when right-clicking on a &lt;code class=&quot;highlighter-rouge&quot;&gt;name_new&lt;/code&gt; for which the name identifier is unknown in &lt;code class=&quot;highlighter-rouge&quot;&gt;UNOList&lt;/code&gt;.  (Patch by Jeremy Rand; thanks to ghost for reporting issue.)&lt;/li&gt;
          &lt;li&gt;Fix exception handling in name registration Qt GUI.  (Patch by Jeremy Rand; thanks to s7r for reporting issue.)&lt;/li&gt;
          &lt;li&gt;Fix Mempool-based fee estimation limits.  (Patch by Jeremy Rand; thanks to s7r for reporting issue.)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unfortunately, due to a currently-unresolved upstream bug, we are not able to provide Android/Linux binaries at this time.  Android/Linux users should remain on v3.3.9.1.&lt;/p&gt;

&lt;p&gt;As usual, you can download it at the &lt;a href=&quot;/download/betas/#electrum-nmc&quot;&gt;Beta Downloads page&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate>
        <link>https://www.namecoin.org/2020/06/07/electrum-nmc-v3.3.10-released.html</link>
        <guid isPermaLink="true">https://www.namecoin.org/2020/06/07/electrum-nmc-v3.3.10-released.html</guid>
        <dc:creator>Jeremy Rand</dc:creator>
        
        <category>Releases</category>
        
        <category>Electrum Releases</category>
        
        
      </item>
    
  </channel>
</rss>
